module Test4
	import C := NAppCore, T := NAppCore

type
	Data = cstruct count: integer end
	
	proc fibonacci( n : integer ): longint
		var a,b: longint
	begin
	  if n > 1 then 
		   a := fibonacci( n - 1 )
		   b := fibonacci( n - 2 )
			return ( a + b )
	  elsif n = 0 then 
			return 0
	  else 
			return 1
	  end
	end fibonacci
	
	proc worker(data: *void): integer
		type DataPtr = *Data
		var
			p: DataPtr
			res: longint
			count: integer
	begin
		C.log_printf("start worker")
		p := cast(DataPtr,data)
		count := p.count
		count := 35
		res := fibonacci(count)
		C.log_printf("count %d, result %lld", p.count, res )
		C.log_printf("end worker")
		return 0
	end worker
	
var
	t: *T.Thread
	i: integer
	d: Data
begin
	println("start Test4")
	C.core_start()
	d.count := 35
	// check https://bugzilla.xamarin.com/15/15695/bug.html
	t := T.bthread_create_imp(worker, d)
	println("thread started")
	T.bthread_wait(t)
	//C.bthread_sleep(2000)
	C.core_finish()
	println("end Test4")
end Test4
